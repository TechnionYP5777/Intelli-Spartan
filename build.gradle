// http://stackoverflow.com/questions/17773817/purpose-of-buildscript-in-gradle
buildscript {
    repositories {
        mavenCentral()
    }
}

// Attach useful gradle plugins
plugins {
    id "org.jetbrains.intellij" version "0.2.7"
    id "idea"
    id "java"
    id "jacoco"
}

// Order the compiler to use UTF-8 encoding
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

// Decides the structure of the directory tree
sourceSets {
    main {
        java.srcDirs 'src/main'
        resources.srcDir 'resources'
    }
    test {
        java.srcDir 'src/test'
        resources.srcDir 'testResources'
    }
}

/**
 * Copies the 'advanced' tippers, as .java files, to the resources directory.
 * It relies on the current packages paths, so changing them might make this
 * task broken. Intellij probably can't auto refactor the paths here, so be aware.
 * See issue #149.
 */
// TODO @RoeiRaz its not a good solution, only a temporary patch. Make the team members aware of the dangers.
task copyTippers(type: Copy) {
    // Assumes we use the last added source directory for the tippers.
    // The first source directory seems to be src.main.java by default.
    def sourcePath = sourceSets.main.java.srcDirs.last().getPath()
    def resourcesPath = sourceSets.main.resources.srcDirs.last().getPath()
    def tippersRelativePath = "/il/org/spartan/Leonidas/plugin/tippers/leonidas"
    def tippersSourcePath = sourcePath + tippersRelativePath
    def tippersResourcesPath = resourcesPath + tippersRelativePath

    // note for the team: you can use 'println sourcePath' for a messy debugging.

    from file(tippersSourcePath)
    into file(tippersResourcesPath)
}

// Transfer the tippers sources before handling the resources.
//noinspection GroovyAssignabilityCheck
processResources.dependsOn copyTippers

// Basic configuration of org.jetbrains.intellij plugin
intellij {
    //noinspection GroovyAssignabilityCheck
    version 'IC-2017.1'
    pluginName 'IntelliJ-Spartanizer'

}

patchPluginXml {
    sinceBuild '141.0'
}

// Used to generate data regarding test coverage, used by CodeCov
jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled false
    }
}

//noinspection GroovyAssignabilityCheck
check.dependsOn jacocoTestReport

repositories { jcenter() }
dependencies {
    compile "com.fifesoft:rsyntaxtextarea:2.6.1"
    testCompile "org.mockito:mockito-core:2.+"
    compile "org.reflections:reflections:0.9.10"
    compile "commons-io:commons-io:2.5"
    compile (project(":il.org.spartan.spartanizer-plugin")) {
        exclude group: 'eclipse-deps', module:'javax.annotation'
        exclude group: 'eclipse-deps', module: 'javax.inject'
        exclude group: 'eclipse-deps', module: 'javax.xml'
        exclude group: 'eclipse-deps', module: 'javax.servlet'
    }
}
